GenericState(Set(Compound[well(well8), agent(agent3), well(well4), well(well7), agent(agent7), tank(tank6), agent(agent5), finish(finish5), finish(finish3), well(well2), finish(finish7), finish(finish4), well(well9), agent(agent6), finish(finish2), well(well3), agent(agent8), agent(agent1), finish(finish1), well(well6), tank(tank5), agent(agent4), well(well1), well(well10), tank(tank3), finish(finish8), well(well5), finish(finish6), tank(tank4), tank(tank2), agent(agent2), tank(tank1)]), Set{Term}(), Dict{Symbol, Any}(:walls => Bool[1 0 0 0 0 0 0 0 0 0 0 1 0 1; 0 1 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 1], :xloc => Dict{Any, Any}((:agent4,) => 9, (:well3,) => 14, (:agent3,) => 10, (:tank3,) => 1, (:agent7,) => 6, (:tank4,) => 1, (:well8,) => 14, (:finish3,) => 7, (:tank6,) => 1, (:well2,) => 14, (:agent2,) => 11, (:tank2,) => 1, (:well6,) => 14, (:finish4,) => 6, (:finish6,) => 4, (:agent1,) => 12, (:agent5,) => 8, (:well10,) => 14, (:tank1,) => 1, (:agent6,) => 7, (:well5,) => 14, (:well7,) => 14, (:finish8,) => 2, (:well9,) => 14, (:well1,) => 14, (:finish1,) => 9, (:well4,) => 14, (:finish7,) => 3, (:agent8,) => 5, (:tank5,) => 1, (:finish2,) => 8, (:finish5,) => 5), :yloc => Dict{Any, Any}((:agent4,) => 5, (:well3,) => 5, (:agent3,) => 5, (:tank3,) => 7, (:agent7,) => 5, (:tank4,) => 8, (:well8,) => 10, (:finish3,) => 14, (:tank6,) => 10, (:well2,) => 4, (:agent2,) => 5, (:tank2,) => 6, (:well6,) => 8, (:finish4,) => 14, (:finish6,) => 14, (:agent1,) => 5, (:agent5,) => 5, (:well10,) => 12, (:tank1,) => 5, (:agent6,) => 5, (:well5,) => 7, (:well7,) => 9, (:finish8,) => 14, (:well9,) => 11, (:well1,) => 3, (:finish1,) => 14, (:well4,) => 6, (:finish7,) => 14, (:agent8,) => 5, (:tank5,) => 9, (:finish2,) => 14, (:finish5,) => 14)))GenericState(Set(Compound[well(well8), agent(agent3), well(well4), well(well7), agent(agent7), tank(tank6), agent(agent5), finish(finish5), finish(finish3), well(well2), finish(finish7), finish(finish4), well(well9), agent(agent6), finish(finish2), well(well3), agent(agent8), agent(agent1), finish(finish1), well(well6), tank(tank5), agent(agent4), well(well1), well(well10), tank(tank3), finish(finish8), well(well5), finish(finish6), tank(tank4), tank(tank2), agent(agent2), tank(tank1)]), Set{Term}(), Dict{Symbol, Any}(:walls => Bool[1 0 0 0 0 0 0 0 0 0 0 1 0 1; 0 1 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 1], :xloc => Dict{Any, Any}((:agent4,) => 9, (:well3,) => 14, (:agent3,) => 10, (:tank3,) => 1, (:agent7,) => 6, (:tank4,) => 1, (:well8,) => 14, (:finish3,) => 7, (:tank6,) => 1, (:well2,) => 14, (:agent2,) => 11, (:tank2,) => 1, (:well6,) => 14, (:finish4,) => 6, (:finish6,) => 4, (:agent1,) => 12, (:agent5,) => 8, (:well10,) => 14, (:tank1,) => 1, (:agent6,) => 7, (:well5,) => 14, (:well7,) => 14, (:finish8,) => 2, (:well9,) => 14, (:well1,) => 14, (:finish1,) => 9, (:well4,) => 14, (:finish7,) => 3, (:agent8,) => 5, (:tank5,) => 1, (:finish2,) => 8, (:finish5,) => 5), :yloc => Dict{Any, Any}((:agent4,) => 4, (:well3,) => 5, (:agent3,) => 4, (:tank3,) => 7, (:agent7,) => 4, (:tank4,) => 8, (:well8,) => 10, (:finish3,) => 14, (:tank6,) => 10, (:well2,) => 4, (:agent2,) => 4, (:tank2,) => 6, (:well6,) => 8, (:finish4,) => 14, (:finish6,) => 14, (:agent1,) => 4, (:agent5,) => 4, (:well10,) => 12, (:tank1,) => 5, (:agent6,) => 4, (:well5,) => 7, (:well7,) => 9, (:finish8,) => 14, (:well9,) => 11, (:well1,) => 3, (:finish1,) => 14, (:well4,) => 6, (:finish7,) => 14, (:agent8,) => 4, (:tank5,) => 9, (:finish2,) => 14, (:finish5,) => 14)))GenericState(Set(Compound[well(well8), agent(agent3), well(well4), well(well7), agent(agent7), tank(tank6), agent(agent5), finish(finish5), finish(finish3), well(well2), finish(finish7), finish(finish4), well(well9), agent(agent6), finish(finish2), well(well3), agent(agent8), agent(agent1), finish(finish1), well(well6), tank(tank5), agent(agent4), well(well1), well(well10), tank(tank3), finish(finish8), well(well5), finish(finish6), tank(tank4), tank(tank2), agent(agent2), tank(tank1)]), Set{Term}(), Dict{Symbol, Any}(:walls => Bool[1 0 0 0 0 0 0 0 0 0 0 1 0 1; 0 1 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 1], :xloc => Dict{Any, Any}((:agent4,) => 9, (:well3,) => 14, (:agent3,) => 10, (:tank3,) => 1, (:agent7,) => 6, (:tank4,) => 1, (:well8,) => 14, (:finish3,) => 7, (:tank6,) => 1, (:well2,) => 14, (:agent2,) => 11, (:tank2,) => 1, (:well6,) => 14, (:finish4,) => 6, (:finish6,) => 4, (:agent1,) => 12, (:agent5,) => 8, (:well10,) => 14, (:tank1,) => 1, (:agent6,) => 7, (:well5,) => 14, (:well7,) => 14, (:finish8,) => 2, (:well9,) => 14, (:well1,) => 14, (:finish1,) => 9, (:well4,) => 14, (:finish7,) => 3, (:agent8,) => 5, (:tank5,) => 1, (:finish2,) => 8, (:finish5,) => 5), :yloc => Dict{Any, Any}((:agent4,) => 3, (:well3,) => 5, (:agent3,) => 3, (:tank3,) => 7, (:agent7,) => 3, (:tank4,) => 8, (:well8,) => 10, (:finish3,) => 14, (:tank6,) => 10, (:well2,) => 4, (:agent2,) => 3, (:tank2,) => 6, (:well6,) => 8, (:finish4,) => 14, (:finish6,) => 14, (:agent1,) => 3, (:agent5,) => 3, (:well10,) => 12, (:tank1,) => 5, (:agent6,) => 3, (:well5,) => 7, (:well7,) => 9, (:finish8,) => 14, (:well9,) => 11, (:well1,) => 3, (:finish1,) => 14, (:well4,) => 6, (:finish7,) => 14, (:agent8,) => 3, (:tank5,) => 9, (:finish2,) => 14, (:finish5,) => 14)))GenericState(Set(Compound[well(well8), agent(agent3), well(well4), well(well7), agent(agent7), tank(tank6), agent(agent5), finish(finish5), finish(finish3), well(well2), finish(finish7), finish(finish4), well(well9), agent(agent6), finish(finish2), well(well3), agent(agent8), agent(agent1), finish(finish1), well(well6), tank(tank5), agent(agent4), well(well1), well(well10), tank(tank3), finish(finish8), well(well5), finish(finish6), tank(tank4), tank(tank2), agent(agent2), tank(tank1)]), Set{Term}(), Dict{Symbol, Any}(:walls => Bool[1 0 0 0 0 0 0 0 0 0 0 1 0 1; 0 1 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 1], :xloc => Dict{Any, Any}((:agent4,) => 10, (:well3,) => 14, (:agent3,) => 11, (:tank3,) => 1, (:agent7,) => 7, (:tank4,) => 1, (:well8,) => 14, (:finish3,) => 7, (:tank6,) => 1, (:well2,) => 14, (:agent2,) => 12, (:tank2,) => 1, (:well6,) => 14, (:finish4,) => 6, (:finish6,) => 4, (:agent1,) => 13, (:agent5,) => 9, (:well10,) => 14, (:tank1,) => 1, (:agent6,) => 8, (:well5,) => 14, (:well7,) => 14, (:finish8,) => 2, (:well9,) => 14, (:well1,) => 14, (:finish1,) => 9, (:well4,) => 14, (:finish7,) => 3, (:agent8,) => 6, (:tank5,) => 1, (:finish2,) => 8, (:finish5,) => 5), :yloc => Dict{Any, Any}((:agent4,) => 3, (:well3,) => 5, (:agent3,) => 3, (:tank3,) => 7, (:agent7,) => 3, (:tank4,) => 8, (:well8,) => 10, (:finish3,) => 14, (:tank6,) => 10, (:well2,) => 4, (:agent2,) => 3, (:tank2,) => 6, (:well6,) => 8, (:finish4,) => 14, (:finish6,) => 14, (:agent1,) => 3, (:agent5,) => 3, (:well10,) => 12, (:tank1,) => 5, (:agent6,) => 3, (:well5,) => 7, (:well7,) => 9, (:finish8,) => 14, (:well9,) => 11, (:well1,) => 3, (:finish1,) => 14, (:well4,) => 6, (:finish7,) => 14, (:agent8,) => 3, (:tank5,) => 9, (:finish2,) => 14, (:finish5,) => 14)))GenericState(Set(Compound[well(well8), agent(agent3), well(well4), well(well7), agent(agent7), tank(tank6), agent(agent5), finish(finish5), finish(finish3), well(well2), finish(finish7), finish(finish4), well(well9), agent(agent6), finish(finish2), well(well3), agent(agent8), agent(agent1), finish(finish1), well(well6), tank(tank5), agent(agent4), well(well1), well(well10), tank(tank3), finish(finish8), well(well5), finish(finish6), tank(tank4), tank(tank2), agent(agent2), tank(tank1)]), Set{Term}(), Dict{Symbol, Any}(:walls => Bool[1 0 0 0 0 0 0 0 0 0 0 1 0 1; 0 1 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 1], :xloc => Dict{Any, Any}((:agent4,) => 11, (:well3,) => 14, (:agent3,) => 12, (:tank3,) => 1, (:agent7,) => 8, (:tank4,) => 1, (:well8,) => 14, (:finish3,) => 7, (:tank6,) => 1, (:well2,) => 14, (:agent2,) => 13, (:tank2,) => 1, (:well6,) => 14, (:finish4,) => 6, (:finish6,) => 4, (:agent1,) => 13, (:agent5,) => 10, (:well10,) => 14, (:tank1,) => 1, (:agent6,) => 9, (:well5,) => 14, (:well7,) => 14, (:finish8,) => 2, (:well9,) => 14, (:well1,) => 14, (:finish1,) => 9, (:well4,) => 14, (:finish7,) => 3, (:agent8,) => 7, (:tank5,) => 1, (:finish2,) => 8, (:finish5,) => 5), :yloc => Dict{Any, Any}((:agent4,) => 3, (:well3,) => 5, (:agent3,) => 3, (:tank3,) => 7, (:agent7,) => 3, (:tank4,) => 8, (:well8,) => 10, (:finish3,) => 14, (:tank6,) => 10, (:well2,) => 4, (:agent2,) => 3, (:tank2,) => 6, (:well6,) => 8, (:finish4,) => 14, (:finish6,) => 14, (:agent1,) => 2, (:agent5,) => 3, (:well10,) => 12, (:tank1,) => 5, (:agent6,) => 3, (:well5,) => 7, (:well7,) => 9, (:finish8,) => 14, (:well9,) => 11, (:well1,) => 3, (:finish1,) => 14, (:well4,) => 6, (:finish7,) => 14, (:agent8,) => 3, (:tank5,) => 9, (:finish2,) => 14, (:finish5,) => 14)))GenericState(Set(Compound[well(well8), agent(agent3), well(well4), well(well7), agent(agent7), tank(tank6), agent(agent5), finish(finish5), finish(finish3), well(well2), finish(finish7), finish(finish4), well(well9), agent(agent6), finish(finish2), well(well3), agent(agent8), agent(agent1), finish(finish1), well(well6), tank(tank5), agent(agent4), well(well1), well(well10), tank(tank3), finish(finish8), well(well5), finish(finish6), tank(tank4), tank(tank2), agent(agent2), tank(tank1)]), Set{Term}(), Dict{Symbol, Any}(:walls => Bool[1 0 0 0 0 0 0 0 0 0 0 1 0 1; 0 1 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 1], :xloc => Dict{Any, Any}((:agent4,) => 11, (:well3,) => 14, (:agent3,) => 12, (:tank3,) => 1, (:agent7,) => 8, (:tank4,) => 1, (:well8,) => 14, (:finish3,) => 7, (:tank6,) => 1, (:well2,) => 14, (:agent2,) => 13, (:tank2,) => 1, (:well6,) => 14, (:finish4,) => 6, (:finish6,) => 4, (:agent1,) => 13, (:agent5,) => 10, (:well10,) => 14, (:tank1,) => 1, (:agent6,) => 9, (:well5,) => 14, (:well7,) => 14, (:finish8,) => 2, (:well9,) => 14, (:well1,) => 14, (:finish1,) => 9, (:well4,) => 14, (:finish7,) => 3, (:agent8,) => 7, (:tank5,) => 1, (:finish2,) => 8, (:finish5,) => 5), :yloc => Dict{Any, Any}((:agent4,) => 3, (:well3,) => 5, (:agent3,) => 3, (:tank3,) => 7, (:agent7,) => 3, (:tank4,) => 8, (:well8,) => 10, (:finish3,) => 14, (:tank6,) => 10, (:well2,) => 4, (:agent2,) => 3, (:tank2,) => 6, (:well6,) => 8, (:finish4,) => 14, (:finish6,) => 14, (:agent1,) => 2, (:agent5,) => 3, (:well10,) => 12, (:tank1,) => 5, (:agent6,) => 3, (:well5,) => 7, (:well7,) => 9, (:finish8,) => 14, (:well9,) => 11, (:well1,) => 3, (:finish1,) => 14, (:well4,) => 6, (:finish7,) => 14, (:agent8,) => 3, (:tank5,) => 9, (:finish2,) => 14, (:finish5,) => 14)))GenericState(Set(Compound[well(well8), agent(agent3), well(well4), well(well7), agent(agent7), tank(tank6), agent(agent5), finish(finish5), finish(finish3), well(well2), finish(finish7), finish(finish4), well(well9), agent(agent6), finish(finish2), well(well3), agent(agent8), agent(agent1), finish(finish1), well(well6), tank(tank5), agent(agent4), well(well1), well(well10), tank(tank3), finish(finish8), well(well5), finish(finish6), tank(tank4), tank(tank2), agent(agent2), tank(tank1)]), Set{Term}(), Dict{Symbol, Any}(:walls => Bool[1 0 0 0 0 0 0 0 0 0 0 1 0 1; 0 1 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 1], :xloc => Dict{Any, Any}((:agent4,) => 11, (:well3,) => 14, (:agent3,) => 12, (:tank3,) => 1, (:agent7,) => 8, (:tank4,) => 1, (:well8,) => 14, (:finish3,) => 7, (:tank6,) => 1, (:well2,) => 14, (:agent2,) => 13, (:tank2,) => 1, (:well6,) => 14, (:finish4,) => 6, (:finish6,) => 4, (:agent1,) => 13, (:agent5,) => 10, (:well10,) => 14, (:tank1,) => 1, (:agent6,) => 9, (:well5,) => 14, (:well7,) => 14, (:finish8,) => 2, (:well9,) => 14, (:well1,) => 14, (:finish1,) => 9, (:well4,) => 14, (:finish7,) => 3, (:agent8,) => 7, (:tank5,) => 1, (:finish2,) => 8, (:finish5,) => 5), :yloc => Dict{Any, Any}((:agent4,) => 3, (:well3,) => 5, (:agent3,) => 3, (:tank3,) => 7, (:agent7,) => 3, (:tank4,) => 8, (:well8,) => 10, (:finish3,) => 14, (:tank6,) => 10, (:well2,) => 4, (:agent2,) => 3, (:tank2,) => 6, (:well6,) => 8, (:finish4,) => 14, (:finish6,) => 14, (:agent1,) => 2, (:agent5,) => 3, (:well10,) => 12, (:tank1,) => 5, (:agent6,) => 3, (:well5,) => 7, (:well7,) => 9, (:finish8,) => 14, (:well9,) => 11, (:well1,) => 3, (:finish1,) => 14, (:well4,) => 6, (:finish7,) => 14, (:agent8,) => 3, (:tank5,) => 9, (:finish2,) => 14, (:finish5,) => 14)))GenericState(Set(Compound[well(well8), agent(agent3), well(well4), well(well7), agent(agent7), tank(tank6), agent(agent5), finish(finish5), finish(finish3), well(well2), finish(finish7), finish(finish4), well(well9), agent(agent6), finish(finish2), well(well3), agent(agent8), agent(agent1), finish(finish1), well(well6), tank(tank5), agent(agent4), well(well1), well(well10), tank(tank3), finish(finish8), well(well5), finish(finish6), tank(tank4), tank(tank2), agent(agent2), tank(tank1)]), Set{Term}(), Dict{Symbol, Any}(:walls => Bool[1 0 0 0 0 0 0 0 0 0 0 1 0 1; 0 1 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 1], :xloc => Dict{Any, Any}((:agent4,) => 11, (:well3,) => 14, (:agent3,) => 12, (:tank3,) => 1, (:agent7,) => 8, (:tank4,) => 1, (:well8,) => 14, (:finish3,) => 7, (:tank6,) => 1, (:well2,) => 14, (:agent2,) => 13, (:tank2,) => 1, (:well6,) => 14, (:finish4,) => 6, (:finish6,) => 4, (:agent1,) => 13, (:agent5,) => 10, (:well10,) => 14, (:tank1,) => 1, (:agent6,) => 9, (:well5,) => 14, (:well7,) => 14, (:finish8,) => 2, (:well9,) => 14, (:well1,) => 14, (:finish1,) => 9, (:well4,) => 14, (:finish7,) => 3, (:agent8,) => 7, (:tank5,) => 1, (:finish2,) => 8, (:finish5,) => 5), :yloc => Dict{Any, Any}((:agent4,) => 3, (:well3,) => 5, (:agent3,) => 3, (:tank3,) => 7, (:agent7,) => 3, (:tank4,) => 8, (:well8,) => 10, (:finish3,) => 14, (:tank6,) => 10, (:well2,) => 4, (:agent2,) => 3, (:tank2,) => 6, (:well6,) => 8, (:finish4,) => 14, (:finish6,) => 14, (:agent1,) => 2, (:agent5,) => 3, (:well10,) => 12, (:tank1,) => 5, (:agent6,) => 3, (:well5,) => 7, (:well7,) => 9, (:finish8,) => 14, (:well9,) => 11, (:well1,) => 3, (:finish1,) => 14, (:well4,) => 6, (:finish7,) => 14, (:agent8,) => 3, (:tank5,) => 9, (:finish2,) => 14, (:finish5,) => 14)))