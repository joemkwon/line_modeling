;; Gripper domain with types
(define (domain gripper-typed)
  (:requirements :typing)
  (:types ball - grippable room gripper - ungrippable)
  (:predicates (robbyat ?r - room) (at ?b - ball ?r - room)
               (free ?g - gripper) (carry ?o - ball ?g - gripper))
  (:action move
   :parameters (?from - room ?to - room)
   :precondition (robbyat ?from)
   :effect (and (robbyat ?to)
                (not (robbyat ?from))))
  (:action pick
   :parameters (?obj - grippable ?room - room ?gripper - gripper)
   :precondition (and (at ?obj ?room)
                      (robbyat ?room)
                      (free ?gripper))
   :effect (and (carry ?obj ?gripper)
                (not (at ?obj ?room))
                (not (free ?gripper))))
  (:action drop
   :parameters (?obj - grippable ?room - room ?gripper - gripper)
   :precondition (and (carry ?obj ?gripper)
                      (robbyat ?room))
   :effect (and (at ?obj ?room)
                (free ?gripper)
                (not (carry ?obj ?gripper)))))
